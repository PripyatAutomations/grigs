#!/usr/bin/perl
use Hamlib;

my $grid1 = "FN20mm";
my $grid2 = shift;

if (!defined $grid2) {
   $grid2 = "FN21pr";
}
($err, $lon1, $lat1, $sw1) = Hamlib::locator2longlat("$grid1");
($err, $lon2, $lat2, $sw1) = Hamlib::locator2longlat("$grid2");
$loc1 = Hamlib::longlat2locator($lon1, $lat1, 3);
$loc2 = Hamlib::longlat2locator($lon2, $lat2, 3);
printf("Loc1:\t\t$grid1 -> %9.4f, %9.4f-> %s\n", $lon1, $lat1, $loc1);
printf("Loc1:\t\t$grid2 -> %9.4f, %9.4f-> %s\n", $lon2, $lat2, $loc2);
 
($err, $dist, $az) = Hamlib::qrb($lon1, $lat1, $lon2, $lat2);
$longpath = Hamlib::distance_long_path($dist);

printf("Distance:\t%.3f km, azimuth %.2f, long path: %.3f km\n",
	$dist, $az, $longpath);

# dec2dms expects values from 180 to -180
# sw is 1 when deg is negative (west or south) as 0 cannot be signed
($err, $deg1, $min1, $sec1, $sw1) = Hamlib::dec2dms($lon1);
($err, $deg2, $min2, $sec2, $sw2) = Hamlib::dec2dms($lat1);

$lon3 = Hamlib::dms2dec($deg1, $min1, $sec1, $sw1);
$lat3 = Hamlib::dms2dec($deg2, $min2, $sec2, $sw2);

printf("Longitude:\t%9.4f, %4d° %2d' %2d\" %1s\trecoded: %9.4f\n",
	$lon1, $deg1, $min1, $sec1, $sw1 ? 'W' : 'E', $lon3);

printf("Latitude:\t%9.4f, %4d° %2d' %2d\" %1s\trecoded: %9.4f\n",
	$lat1, $deg2, $min2, $sec2, $sw2 ? 'S' : 'N', $lat3);
